////////////////////////////////////////////////////////////////////////////////////////
//
// 저작권 표기 License V3.3
//
// 본 소스 코드는 아래 사항에 동의할 경우에 사용 가능합니다.
// 아래 사항에 대해 동의하지 않거나 이해하지 못했을 경우 사용을 금합니다.
//
// 본 소스 코드를 :
//		- 사용하였다면 아래 사항을 모두 동의하는 것으로 자동 간주 합니다.
//		- 상업적 또는 비 상업적 이용이 가능합니다.
//		- 본 저작권 표시 주석을 제외한 코드의 내용을 임의로 수정하여 사용하는 것은 허용합니다.
//		- 사용자가 수정한 코드를 사용자의 고객사에게 상호간 전달은 허용합니다.
//		- 그러나 수정하여 다수에게 재배포하는 행위를 금지합니다.
//		- 사용으로 인해 발생하는 모든 사고에 대해서 어떠한 법적 책임을 지지 않습니다.
//		- 어떤 형태의 기여든지, 그것은 기증으로 받아들입니다.
//
// 본 소스 코드는 프리웨어로 앞으로도 유료로 전환하지 않을 것입니다.
// 사용자 또는 부품의 제조사가 요구하는 업데이트가 있을 경우 후원금을 받아
// 요구하는 사항을 업데이트 할 예정입니다.
//
// Home Page : http://cafe.naver.com/yssoperatingsystem
// Copyright 2024. 홍윤기 all right reserved.
//
////////////////////////////////////////////////////////////////////////////////////////

#include "Noto_Sans_CJK_HK_Medium_18.h"

static const uint8_t font_0x00000070[70] = // p
{
	0xF5, 0x33, 0xC8, 0x39, 0x00, 
	0xF5, 0xFC, 0xDD, 0xFF, 0x05, 
	0xF5, 0x4D, 0x00, 0xF5, 0x0D, 
	0xF5, 0x08, 0x00, 0xD0, 0x3F, 
	0xF5, 0x08, 0x00, 0xA0, 0x4F, 
	0xF5, 0x08, 0x00, 0xB0, 0x4F, 
	0xF5, 0x08, 0x00, 0xE1, 0x2F, 
	0xF5, 0x2B, 0x00, 0xF8, 0x0A, 
	0xF5, 0xFF, 0xFD, 0xDF, 0x02, 
	0xF5, 0x58, 0xCA, 0x18, 0x00, 
	0xF5, 0x08, 0x00, 0x00, 0x00, 
	0xF5, 0x08, 0x00, 0x00, 0x00, 
	0xF5, 0x08, 0x00, 0x00, 0x00, 
	0xF5, 0x08, 0x00, 0x00, 0x00
};

static const Font::fontInfo_t fontData0[1]
{
	{								// p
		0x00000070,					// utf8 code
		10,							// width
		14,							// height
		1,							// x position
		5,							// y position
		(uint8_t*)font_0x00000070	// data
	}
};

static const uint8_t font_0x00000079[70] = // y
{
	0xF7, 0x06, 0x00, 0x70, 0x5F, 
	0xF2, 0x0C, 0x00, 0xD0, 0x1F, 
	0xA0, 0x3F, 0x00, 0xF2, 0x09, 
	0x40, 0x7F, 0x00, 0xF6, 0x04, 
	0x00, 0xDD, 0x00, 0xEC, 0x00, 
	0x00, 0xF7, 0x23, 0x8F, 0x00, 
	0x00, 0xF2, 0x58, 0x3F, 0x00, 
	0x00, 0xA0, 0xAE, 0x0D, 0x00, 
	0x00, 0x40, 0xFF, 0x07, 0x00, 
	0x00, 0x00, 0xFE, 0x03, 0x00, 
	0x00, 0x10, 0xCF, 0x00, 0x00, 
	0x00, 0x80, 0x5F, 0x00, 0x00, 
	0xB0, 0xFE, 0x0A, 0x00, 0x00, 
	0xC1, 0x7C, 0x00, 0x00, 0x00
};

static const uint8_t font_0x00000061[40] = // a
{
	0x20, 0xA7, 0x9D, 0x03, 
	0xF5, 0xCF, 0xFC, 0x3F, 
	0x71, 0x01, 0x60, 0x9F, 
	0x00, 0x00, 0x30, 0xDF, 
	0x10, 0xA5, 0xFE, 0xFF, 
	0xD2, 0x5C, 0x22, 0xFF, 
	0xFB, 0x02, 0x10, 0xFF, 
	0xFF, 0x02, 0x60, 0xFF, 
	0xF8, 0xAF, 0xCE, 0xFE, 
	0x70, 0xBC, 0x06, 0xFA
};

static const uint8_t font_0x00000069[30] = // i
{
	0x51, 0x02, 
	0xF7, 0x0A, 
	0xB3, 0x05, 
	0x00, 0x00, 
	0x00, 0x00, 
	0xF5, 0x08, 
	0xF5, 0x08, 
	0xF5, 0x08, 
	0xF5, 0x08, 
	0xF5, 0x08, 
	0xF5, 0x08, 
	0xF5, 0x08, 
	0xF5, 0x08, 
	0xF5, 0x08, 
	0xF5, 0x08
};

static const Font::fontInfo_t fontData1[3]
{
	{								// y
		0x00000079,					// utf8 code
		10,							// width
		14,							// height
		0,							// x position
		5,							// y position
		(uint8_t*)font_0x00000079	// data
	},
	{								// a
		0x00000061,					// utf8 code
		8,							// width
		10,							// height
		1,							// x position
		5,							// y position
		(uint8_t*)font_0x00000061	// data
	},
	{								// i
		0x00000069,					// utf8 code
		3,							// width
		15,							// height
		1,							// x position
		0,							// y position
		(uint8_t*)font_0x00000069	// data
	}
};

static const uint8_t font_0x00000062[75] = // b
{
	0x10, 0x01, 0x00, 0x00, 0x00, 
	0xF5, 0x08, 0x00, 0x00, 0x00, 
	0xF5, 0x08, 0x00, 0x00, 0x00, 
	0xF5, 0x08, 0x00, 0x00, 0x00, 
	0xF5, 0x08, 0x00, 0x00, 0x00, 
	0xF5, 0x37, 0xD9, 0x39, 0x00, 
	0xF5, 0xFD, 0xDD, 0xFF, 0x04, 
	0xF5, 0x4D, 0x00, 0xF5, 0x0D, 
	0xF5, 0x08, 0x00, 0xD0, 0x3F, 
	0xF5, 0x08, 0x00, 0xA0, 0x4F, 
	0xF5, 0x08, 0x00, 0xB0, 0x4F, 
	0xF5, 0x08, 0x00, 0xE0, 0x2F, 
	0xF5, 0x2B, 0x00, 0xF8, 0x0A, 
	0xF5, 0xFD, 0xFD, 0xDF, 0x02, 
	0xF5, 0x53, 0xCA, 0x18, 0x00
};

static const uint8_t font_0x00000072[40] = // r
{
	0xF5, 0x23, 0xEA, 0x03, 
	0xF5, 0xC6, 0xFF, 0x02, 
	0xF5, 0x8F, 0x01, 0x00, 
	0xF5, 0x0B, 0x00, 0x00, 
	0xF5, 0x08, 0x00, 0x00, 
	0xF5, 0x08, 0x00, 0x00, 
	0xF5, 0x08, 0x00, 0x00, 
	0xF5, 0x08, 0x00, 0x00, 
	0xF5, 0x08, 0x00, 0x00, 
	0xF5, 0x08, 0x00, 0x00
};

static const Font::fontInfo_t fontData2[2]
{
	{								// b
		0x00000062,					// utf8 code
		10,							// width
		15,							// height
		1,							// x position
		0,							// y position
		(uint8_t*)font_0x00000062	// data
	},
	{								// r
		0x00000072,					// utf8 code
		7,							// width
		10,							// height
		1,							// x position
		5,							// y position
		(uint8_t*)font_0x00000072	// data
	}
};

static const uint8_t font_0x00000073[40] = // s
{
	0x00, 0xA4, 0xAD, 0x06, 
	0x50, 0xEF, 0xC9, 0x7F, 
	0xC0, 0x2F, 0x00, 0x03, 
	0xA0, 0x6F, 0x00, 0x00, 
	0x20, 0xFB, 0x7E, 0x01, 
	0x00, 0x40, 0xFB, 0x4F, 
	0x00, 0x00, 0x40, 0xCF, 
	0x60, 0x02, 0x20, 0xDF, 
	0xF3, 0xBF, 0xE9, 0x5F, 
	0x10, 0xA7, 0x9D, 0x04
};

static const uint8_t font_0x00000053[65] = // S
{
	0x00, 0x94, 0xAD, 0x27, 0x00, 
	0x80, 0xFF, 0xFF, 0xEF, 0x04, 
	0xF4, 0x2C, 0x10, 0xB3, 0x02, 
	0xF6, 0x07, 0x00, 0x00, 0x00, 
	0xF4, 0x3D, 0x00, 0x00, 0x00, 
	0x90, 0xFF, 0x4A, 0x00, 0x00, 
	0x00, 0xC4, 0xFF, 0x4D, 0x00, 
	0x00, 0x00, 0x93, 0xFF, 0x07, 
	0x00, 0x00, 0x00, 0xF4, 0x1F, 
	0x10, 0x00, 0x00, 0xF0, 0x1F, 
	0xD9, 0x15, 0x00, 0xF6, 0x0C, 
	0xE5, 0xFF, 0xFF, 0xEF, 0x02, 
	0x20, 0xB7, 0xAE, 0x17, 0x00
};

static const Font::fontInfo_t fontData3[2]
{
	{								// s
		0x00000073,					// utf8 code
		8,							// width
		10,							// height
		0,							// x position
		5,							// y position
		(uint8_t*)font_0x00000073	// data
	},
	{								// S
		0x00000053,					// utf8 code
		10,							// width
		13,							// height
		1,							// x position
		2,							// y position
		(uint8_t*)font_0x00000053	// data
	}
};

static const uint8_t font_0x00000064[75] = // d
{
	0x00, 0x00, 0x00, 0x00, 0x11, 
	0x00, 0x00, 0x00, 0x30, 0xAF, 
	0x00, 0x00, 0x00, 0x30, 0xAF, 
	0x00, 0x00, 0x00, 0x30, 0xAF, 
	0x00, 0x00, 0x00, 0x30, 0xAF, 
	0x00, 0x60, 0xCA, 0x47, 0xAF, 
	0x00, 0xFA, 0xCF, 0xFF, 0xAF, 
	0x50, 0xBF, 0x01, 0x70, 0xAF, 
	0xB0, 0x4F, 0x00, 0x30, 0xAF, 
	0xF0, 0x1F, 0x00, 0x30, 0xAF, 
	0xF1, 0x1F, 0x00, 0x30, 0xAF, 
	0xE0, 0x3F, 0x00, 0x30, 0xAF, 
	0x70, 0xAF, 0x01, 0x91, 0xAF, 
	0x10, 0xFC, 0xCF, 0xCF, 0xAF, 
	0x00, 0x71, 0xBB, 0x06, 0xAF
};

static const uint8_t font_0x00000074[52] = // t
{
	0x00, 0x87, 0x00, 0x00, 
	0x00, 0xFD, 0x00, 0x00, 
	0x00, 0xFF, 0x00, 0x00, 
	0xD6, 0xFF, 0xFF, 0x06, 
	0xB5, 0xFF, 0xAA, 0x05, 
	0x10, 0xFF, 0x00, 0x00, 
	0x10, 0xFF, 0x00, 0x00, 
	0x10, 0xFF, 0x00, 0x00, 
	0x10, 0xFF, 0x00, 0x00, 
	0x10, 0xFF, 0x00, 0x00, 
	0x00, 0xFF, 0x03, 0x00, 
	0x00, 0xF8, 0xBF, 0x07, 
	0x00, 0x70, 0xBC, 0x06
};

static const Font::fontInfo_t fontData4[2]
{
	{								// d
		0x00000064,					// utf8 code
		10,							// width
		15,							// height
		0,							// x position
		0,							// y position
		(uint8_t*)font_0x00000064	// data
	},
	{								// t
		0x00000074,					// utf8 code
		7,							// width
		13,							// height
		0,							// x position
		2,							// y position
		(uint8_t*)font_0x00000074	// data
	}
};

static const uint8_t font_0x00000045[65] = // E
{
	0xF3, 0xFF, 0xFF, 0xFF, 0x07, 
	0xF3, 0xCF, 0xCC, 0xCC, 0x06, 
	0xF3, 0x0B, 0x00, 0x00, 0x00, 
	0xF3, 0x0B, 0x00, 0x00, 0x00, 
	0xF3, 0x0B, 0x00, 0x00, 0x00, 
	0xF3, 0xBF, 0xBB, 0x8B, 0x00, 
	0xF3, 0xFF, 0xFF, 0x9F, 0x00, 
	0xF3, 0x0B, 0x00, 0x00, 0x00, 
	0xF3, 0x0B, 0x00, 0x00, 0x00, 
	0xF3, 0x0B, 0x00, 0x00, 0x00, 
	0xF3, 0x0B, 0x00, 0x00, 0x00, 
	0xF3, 0xCF, 0xCC, 0xCC, 0x09, 
	0xF3, 0xFF, 0xFF, 0xFF, 0x0A
};

static const uint8_t font_0x0000006D[80] = // m
{
	0xF5, 0x23, 0xD8, 0x2A, 0x20, 0xD9, 0x29, 0x00, 
	0xF5, 0xE9, 0xFF, 0xCF, 0xE5, 0xFF, 0xDF, 0x00, 
	0xF5, 0x5F, 0x10, 0xFB, 0x5F, 0x10, 0xFC, 0x04, 
	0xF5, 0x08, 0x00, 0xF7, 0x07, 0x00, 0xF7, 0x06, 
	0xF5, 0x08, 0x00, 0xF6, 0x07, 0x00, 0xF7, 0x06, 
	0xF5, 0x08, 0x00, 0xF6, 0x07, 0x00, 0xF6, 0x06, 
	0xF5, 0x08, 0x00, 0xF6, 0x07, 0x00, 0xF6, 0x06, 
	0xF5, 0x08, 0x00, 0xF6, 0x07, 0x00, 0xF6, 0x06, 
	0xF5, 0x08, 0x00, 0xF6, 0x07, 0x00, 0xF6, 0x06, 
	0xF5, 0x08, 0x00, 0xF6, 0x07, 0x00, 0xF6, 0x06
};

static const uint8_t font_0x00000065[50] = // e
{
	0x00, 0x50, 0xD9, 0x39, 0x00, 
	0x00, 0xF9, 0xAD, 0xFD, 0x05, 
	0x50, 0x8F, 0x00, 0xB0, 0x1E, 
	0xC0, 0x1F, 0x00, 0x50, 0x3F, 
	0xF1, 0xFF, 0xFF, 0xFF, 0x4F, 
	0xF1, 0x6F, 0x66, 0x66, 0x26, 
	0xC0, 0x2F, 0x00, 0x00, 0x00, 
	0x50, 0xAF, 0x01, 0x10, 0x01, 
	0x00, 0xF9, 0xAE, 0xEA, 0x0B, 
	0x00, 0x40, 0xD9, 0x7B, 0x02
};

static const Font::fontInfo_t fontData5[3]
{
	{								// E
		0x00000045,					// utf8 code
		9,							// width
		13,							// height
		1,							// x position
		2,							// y position
		(uint8_t*)font_0x00000045	// data
	},
	{								// m
		0x0000006D,					// utf8 code
		15,							// width
		10,							// height
		1,							// x position
		5,							// y position
		(uint8_t*)font_0x0000006D	// data
	},
	{								// e
		0x00000065,					// utf8 code
		10,							// width
		10,							// height
		0,							// x position
		5,							// y position
		(uint8_t*)font_0x00000065	// data
	}
};

static const uint8_t font_0x0000006E[50] = // n
{
	0xF5, 0x23, 0xC7, 0x4A, 0x00, 
	0xF5, 0xE9, 0xFF, 0xFF, 0x03, 
	0xF5, 0x6F, 0x00, 0xF8, 0x07, 
	0xF5, 0x08, 0x00, 0xF4, 0x0A, 
	0xF5, 0x08, 0x00, 0xF3, 0x0A, 
	0xF5, 0x08, 0x00, 0xF3, 0x0A, 
	0xF5, 0x08, 0x00, 0xF3, 0x0A, 
	0xF5, 0x08, 0x00, 0xF3, 0x0A, 
	0xF5, 0x08, 0x00, 0xF3, 0x0A, 
	0xF5, 0x08, 0x00, 0xF3, 0x0A
};

static const Font::fontInfo_t fontData6[1]
{
	{								// n
		0x0000006E,					// utf8 code
		9,							// width
		10,							// height
		1,							// x position
		5,							// y position
		(uint8_t*)font_0x0000006E	// data
	}
};

static const uint8_t font_0x0000004F[78] = // O
{
	0x00, 0x50, 0xC8, 0x7A, 0x02, 0x00, 
	0x10, 0xFA, 0xFF, 0xFF, 0x6F, 0x00, 
	0xA0, 0xAF, 0x02, 0x51, 0xFE, 0x04, 
	0xF4, 0x0D, 0x00, 0x00, 0xF4, 0x0C, 
	0xF9, 0x05, 0x00, 0x00, 0xC0, 0x3F, 
	0xFC, 0x03, 0x00, 0x00, 0x90, 0x5F, 
	0xFF, 0x02, 0x00, 0x00, 0x70, 0x6F, 
	0xFC, 0x03, 0x00, 0x00, 0x90, 0x4F, 
	0xF8, 0x06, 0x00, 0x00, 0xD0, 0x3F, 
	0xF4, 0x0D, 0x00, 0x00, 0xF5, 0x0C, 
	0xA0, 0xBF, 0x02, 0x51, 0xFF, 0x04, 
	0x10, 0xFA, 0xFF, 0xFF, 0x5F, 0x00, 
	0x00, 0x50, 0xC8, 0x7A, 0x02, 0x00
};

static const uint8_t font_0x00000067[84] = // g
{
	0x00, 0x71, 0xFC, 0xFF, 0xFF, 0x00, 
	0x20, 0xFD, 0x99, 0xFF, 0x8A, 0x00, 
	0x80, 0x4F, 0x00, 0xF4, 0x07, 0x00, 
	0x90, 0x2F, 0x00, 0xF2, 0x08, 0x00, 
	0x50, 0x8F, 0x11, 0xF8, 0x04, 0x00, 
	0x00, 0xFA, 0xFF, 0x7F, 0x00, 0x00, 
	0x30, 0x5F, 0x44, 0x02, 0x00, 0x00, 
	0x60, 0x2F, 0x00, 0x00, 0x00, 0x00, 
	0x40, 0xEF, 0x9A, 0x89, 0x05, 0x00, 
	0x10, 0xFD, 0xFF, 0xFF, 0xAF, 0x00, 
	0xB0, 0x1C, 0x00, 0x20, 0xFF, 0x01, 
	0xF1, 0x09, 0x00, 0x20, 0xCF, 0x00, 
	0xA0, 0xAF, 0x56, 0xD7, 0x2D, 0x00, 
	0x00, 0xA5, 0xCD, 0x59, 0x01, 0x00
};

static const Font::fontInfo_t fontData7[2]
{
	{								// O
		0x0000004F,					// utf8 code
		12,							// width
		13,							// height
		1,							// x position
		2,							// y position
		(uint8_t*)font_0x0000004F	// data
	},
	{								// g
		0x00000067,					// utf8 code
		11,							// width
		14,							// height
		0,							// x position
		5,							// y position
		(uint8_t*)font_0x00000067	// data
	}
};
static const CodeFont::codeFontInfo_t codeFontInfo = 
{
	18,
	{1, 3, 2, 2, 2, 3, 1, 2},
	{
		fontData0,
		fontData1,
		fontData2,
		fontData3,
		fontData4,
		fontData5,
		fontData6,
		fontData7
	}
};

CodeFont Font_Noto_Sans_CJK_HK_Medium_18(&codeFontInfo);


